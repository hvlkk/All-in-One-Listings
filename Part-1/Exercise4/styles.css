/*
  font-face -> Making 4 custom text fonts for light, regular, italic and bold font styles respectively.
*/
@font-face {
  font-family: MyLightFont;
  src: url(../resources/fonts/Roboto-Light.ttf);
  font-weight: 100;
}

@font-face {
  font-family: MyRegularFont;
  src: url(../resources/fonts/Roboto-Regular.ttf);
  font-weight: 400;
}

@font-face {
  font-family: MyItalicFont;
  src: url(../resources/fonts/Roboto-Italic.ttf);
  font-weight: 400;
  font-style: italic;
}

@font-face {
  font-family: MyBoldFont;
  src: url(../resources/fonts/Roboto-Bold.ttf);
  font-weight: 700;
}

/*
    background-color -> Setting the background color of the body to #fbf0e4.
    font-family -> Setting the font family of the body to our custom font (Roboto), "Times New Roman", serif.
*/
body {
  background-color: #fff7ef;
  font-family: MyRegularFont, "Times New Roman", serif;
  text-align: center;
  padding: 0px;
  margin: 0px;
  overflow-x: hidden;
  display: grid;
  min-height: 100vh;
  grid-template-rows: auto 1fr auto;
}

/*  Display the content in a centered column */
main.detailed-listing {
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
}

/* Remove excess margin */
figure.apartment {
  margin: 0;
}

/* Setting our custom font here for better readability */
.main figcaption {
  font-family: MyBoldFont;
}

/* Setting some padding for better UX */
#team > div > article > p {
  padding: 0.5rem;
  font-family: MyItalicFont;
}

/*
    font-family -> Setting the font family of the h1, h2, h3, h4, h5, h6 to "Helvetica", "Verdana", sans-serif.
*/
h1,
h2,
h3,
h4,
h5,
h6 {
  font-family: "Helvetica", "Verdana", sans-serif;
  margin: 0.4rem;
}

/* Make h1 smaller to fit better a mobile first design */
h1 {
  margin: 1rem;
  font-size: 1.5rem;
}

/* Sizing down for mobile first design */
h2 {
  font-size: 1.2rem;
  margin-bottom: 1rem;
}

/*
    background-color -> Seting the background color of the form to #fffdfb66.
*/
form {
  background-color: #fffdfb66;
}

/* Add margin for seperation */
.category li {
  margin-bottom: 0.3rem;
}

/* Align the paragraph in center */
p.listing-number {
  text-align: center;
}

/*
    list-style-type: none -> Removing the default list style.
*/
li {
  list-style-type: none;
}

/*
    text-decoration: none -> Removing the default text decoration.
*/
a {
  text-decoration: none;
}

/*  When hovering over an anchor tag, the following styles will be applied.

    text-decoration: underline -> Adding an underline to the text.
    color: blue -> Setting the color of the text to blue.
*/
a:hover {
  text-decoration: underline;
}

/*  When an anchor tag is visited/active, the following styles will be applied.

*/
a:visited {
  color: rgb(128, 0, 70);
}

a:active {
  opacity: 0.7;
}

a:link {
  color: #8b4513;
}

/*  spin -> Creating a custom animation called sway. 
     transform: rotate(x); -> Rotating the element by x degrees.
*/
@keyframes sway {
  0% {
    transform: rotate(-20deg);
  }

  25% {
    transform: rotate(90deg);
  }

  75% {
    transform: rotate(-40deg);
  }

  100% {
    transform: rotate(10deg);
  }
}

/*  Selecting the images with hovering state,
    inside the company-social-media class ancestor.
    
    animation: sway 0.4s linear; -> Applying the sway animation to the image.
    opacity: 0.8; -> Setting the opacity of the image to 0.8, to make the color lighter.

*/
.company-social-media img:hover {
  animation: sway 0.4s linear;
  opacity: 0.8;
}

/* Default button styling, rounded edges */
button {
  background-color: #f5f5f5;
  border: 1px solid black;
  border-radius: 10px;
  height: 35px;
  width: 117px;
  margin: 5px;
  cursor: pointer;
}

/* Using green color for submit button */
.btn-submit {
  background-color: rgb(98, 174, 91);
  color: white;
}

/* Using red color for reset button */
.btn-reset {
  background-color: rgb(160, 52, 52);
  color: white;
}

/* Making buttons more opaque while hovering */
.btn:hover {
  opacity: 0.7;
}

/* Marking the price trend as red */
#price-trend {
  color: red;
  font-weight: normal;
}

/* Setting custom width to the table and a background for better readability */
table {
  background-color: #f1d6b5;
  border-collapse: collapse;
  width: 350px;
}

/* Align the content of the table rows to the left */
tr > * {
  text-align: left;
  border: 1px solid black;
  padding: 5px;
}

/* Make characteristics bold for better UX */
.listing-characteristics {
  font-weight: bold;
}

/* Make caption bold for better readability */
table > caption {
  font-weight: bold;
  font-size: 1.1rem;
}

/* Alternate background colors between consecutive rows */
tr:nth-child(odd) {
  background-color: #fbe8d2;
}

/* Create a card like listing, using rounded edges, padding, background color and aligning hte content in a column */
.listing {
  font-size: 0.9rem;
  background-color: #fcfbfb;
  width: 20rem;
  border: 1px solid black;
  border-radius: 15px;
  margin-bottom: 1rem;
  padding: 0.5rem;
  display: flex;
  flex-direction: column;
  justify-content: space-between;
  align-items: center;
}

/* Simple hover effect with a small shadow */
.listing:hover {
  box-shadow: 0px 0px 10px 0px rgba(0, 0, 0, 0.75);
}

/* Letting the responsive listing images get their full size if needed, and assign a small margin */
.listing img {
  max-width: 100%;
  max-height: 100%;
  margin-bottom: 1rem;
}

/* Simple hover effect by changing the color to black */
a.card:hover {
  text-decoration: none;
  color: black;
  box-sizing: border-box;
}

/* Mark visited links with black colored text */
a.card:visited,
a.card:link {
  color: black;
}

/* Set a max width for the images inside the category cards */
.category img {
  max-width: 100%;
}

/*  Create a card like vategory, with padding, margin, background color and aligning its content in a centered column */
.category {
  background-color: whitesmoke;
  border: 1px solid grey;
  border-radius: 10px;
  margin-bottom: 1rem;
  text-align: center;
  display: flex;
  flex-direction: column;
  padding: 1rem;
}

/* Removing excess padding */
ul {
  padding: 0px;
}

/* Making the images round */
#team > div > article > figure > img {
  height: 5rem;
  width: 5rem;
  border-radius: 50%;
  margin: 1rem;
}

/* Make the header expand to the full width of the body */
header {
  padding: 0.2rem 0;
  background-color: #ffdeb7;
  width: 100%;
}

/* Simple blue colored text for hovered anchor tags in the header */
header a:hover {
  color: darkblue;
}

/* Expand footer to the full width of the body, make its content white colored */
footer {
  width: 100%;
  background-color: #333;
  color: #fff;
  padding: 10px 0px;
  text-align: center;
  font-size: 0.8rem;
}

/* Make company logo rounded */
.company-logo {
  height: 70px;
  border-radius: 50%;
}

/* Exercise 3 - Grid, Flexbox */

/* Create two rows, the first is assigned at the h1, also it is centering the content in both axis */
.categories,
.listings {
  display: grid;
  grid-template-rows: auto 1fr;
  grid-gap: 1rem;
  place-items: center;
}

/* Assign every column of the row to the h1, align it in the center */
.categories > h1,
.listings > h1 {
  grid-column: 1 / -1;
  text-align: center;
}

/* Simple shadow when hovering a category card */
.category:hover {
  box-shadow: 0px 0px 10px 0px rgba(0, 0, 0, 0.75);
}

/* Allow images get up to 100% of the size of their parent */
.apartment > img {
  max-width: 100%;
  max-height: 100%;
}

/* Implement columns with grid. Mobile devices get 1, tablets 2, laptops-pcs 3 */
.apartment {
  display: grid;
  gap: 1rem;
  grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
  padding: 1rem;
  text-align: center;
  justify-items: center;
}

/* Adding margin for seperation */
.apartment > figcaption {
  margin-top: 1rem;
}

/* Centering the content by using flexbox */
.description {
  display: flex;
  justify-content: center;
  align-items: center;
}

/* Centering the elements of the navigation bar and spacing them evenly */
nav {
  display: flex;
  justify-content: space-evenly;
  align-items: center;
  font-size: 0.75rem;
  max-width: 100%;
}

/* Make the images of the navigation bar rounded */
nav > img {
  height: 2rem;
  border-radius: 50%;
}

nav > ul {
  display: flex;
  gap: 0.7rem;
}

/* Align the paragraphs in description class to the left, also adding some margin */
.description > p {
  text-align: left;
  margin: 2rem;
}

/* Using flexbox for centering the elements of the footer */
footer {
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  margin-top: 2rem;
}

/* Centering the social media images inside the ul */
.company-social-media > ul {
  display: flex;
  justify-content: center;
  align-items: center;
  gap: 0.5rem;
}

/* Setting a height to the images of the social media */
.company-social-media > ul > li > a > img {
  height: 3rem;
}

/* Centering the content with flexbox */
#team {
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
}

/* Removing excess margin */
#team > h2 {
  margin-bottom: 0rem;
}

/* Creating some card like articles, with centered content using flexbox */
#team > div > article {
  background-color: rgb(214, 235, 235);
  display: flex;
  flex-direction: column;
  align-items: center;
  border: 1px solid black;
  box-shadow: 0px 0px 5px 0px rgba(0, 0, 0, 0.55);
  width: 100%;
  justify-content: center;
  margin: 0.5rem 0rem;
  text-align: center;
}

/* Removing excess margin */
#team > div > article > figure {
  margin: 0rem;
}

/* Centering the content using flexbox */
.main {
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  padding: 0rem 2rem;
}

/* Adding some side padding that pushes the content to the center */
.about {
  padding: 0rem 2rem;
}

/* Centering the content of the form using flexbox, assigning a background color to the form for better UX */
form {
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  gap: 1rem;
  background-color: rgb(232, 226, 209);
  width: 100%;
  border: 1px solid #333;
  border-radius: 10px;
}

/* Using flexbox to center the content of the fieldset */
fieldset {
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  gap: 1rem;
  border: none;
  width: 100%;
  border-radius: 10px;
  margin: 0;
  padding: 0;
}

/* Using position relative to make the labels have an absolute position based off that */
fieldset > div {
  display: flex;
  flex-direction: column;
  position: relative;
  padding-top: 1.5rem;
  width: 90%;
}

/* Make labels stay on top left of the inputs */
fieldset > div > label {
  position: absolute;
  top: 0;
  left: 0;
}

/* Make edges rounded */
fieldset > input {
  border-radius: 5px;
  height: 1.5rem;
  width: 90%;
  max-width: 95%;
}

/* Use our own font for better readability */
fieldset > legend {
  font-family: MyLightFont;
  margin: 0.5rem 0;
}

fieldset .required {
  color: brown;
}

#intro > h1 {
  font-size: 2em;
}

/* Organising the listing details definition list as a grid */
.listing-details {
  display: grid;
  grid-template-columns: auto auto;
  grid-template-rows: repeat(3, 1fr);
}

/* Organising columns and alignment for the dd and dt childs of listing details  */
dt {
  grid-column: 1 / 2;
  text-align: center;
}

dd {
  grid-column: 2 / 3;
  text-align: center;
}

/* adding a small margin between the listing details and the table that follows */
.detailed-listing > .listing-details {
  margin-bottom: 2rem;
}

/* letting the responsive images get their max width & height */
.category img {
  max-width: 100%;
  max-height: 100%;
}

/* Exercise 4 - Media Queries */
/* 480px - 1000px */

@media (min-width: 480px) {
  /* Implementing 2 columns for listings and categories */
  .categories,
  .listings {
    grid-template-columns: repeat(2, minmax(auto, 1fr));
    padding: 0 1rem;
  }

  /* Assign the same height to every category */
  .category {
    height: 470px;
  }

  /* Assign the same height to every listing */
  .listing {
    height: 550px;
    padding-bottom: 1rem;
  }

  nav {
    font-size: 1rem;
  }

  /* Make images bigger than smartphone size */
  nav > img {
    height: 2.2rem;
  }

  /* Adding more gap to the ul */
  nav > ul {
    gap: 2rem;
  }

  /* Make the form get 80% of its parent width */
  form {
    flex-direction: row;
    width: 80%;
    position: relative;
    padding: 1rem;
  }

  form > div {
    position: absolute;
    bottom: -50px;
  }

  /* Make social media images bigger */
  .company-social-media > ul > li > a > img {
    height: 3rem;
  }

  /* Make footer content font size bigger than smartphone */
  footer {
    font-size: 0.9rem;
  }

  img {
    max-height: 236px;
  }

  /* Making the pictures of the apartment a 2x2 grid on tablets and pc screens */
  .apartment {
    display: grid;
    grid-template-columns: auto auto;
    grid-template-rows: auto auto;
    padding: 1rem 1rem 2rem 1rem;
    gap: 1rem;
  }
}

@media (min-width: 1000px) {
  /* Implementing 3 columns for listings and categories */
  .categories,
  .listings {
    grid-template-columns: repeat(3, minmax(300px, 1fr));
  }

  /* Make the team member cards get more screen estate */
  .team-members {
    display: flex;
    gap: 2rem;
  }

  /* Assign a maximum width to the form for better UX */
  form {
    max-width: 1300px;
  }

  /* Slightly adjusting the gap on pc screens */
  .apartment {
    gap: 2.5rem;
  }

  /* Adding a hover effect to the apartment pictures */
  .apartment > img:hover {
    transform: scale(1.1);
  }
}
