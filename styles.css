/*
  font-face -> Making 4 custom text fonts for light, regular, italic and bold font styles respectively.
*/
@font-face {
  font-family: MyLightFont;
  src: url(../resources/fonts/Roboto-Light.ttf);
  font-weight: 100;
}

@font-face {
  font-family: MyRegularFont;
  src: url(../resources/fonts/Roboto-Regular.ttf);
  font-weight: 400;
}

@font-face {
  font-family: MyItalicFont;
  src: url(../resources/fonts/Roboto-Italic.ttf);
  font-weight: 400;
  font-style: italic;
}

@font-face {
  font-family: MyBoldFont;
  src: url(../resources/fonts/Roboto-Bold.ttf);
  font-weight: 700;
}

/*
    background-color -> Setting the background color of the body to #fbf0e4.
    font-family -> Setting the font family of the body to our custom font (Roboto), "Times New Roman", serif.
*/
body {
  background-color: #fff7ef;
  font-family: MyRegularFont, "Times New Roman", serif;
  text-align: center;
  padding: 0px;
  margin: 0px;
  overflow-x: hidden;
  display: grid;
  min-height: 100vh;
  grid-template-rows: auto 1fr auto;
}

main.detailed-listing {
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
}

figure.apartment {
  margin: 0;
}

.main figcaption {
  font-family: MyBoldFont;
}

#team > div > article > p {
  padding: 0.5rem;
  font-family: MyItalicFont;
}

/*
    font-family -> Setting the font family of the h1, h2, h3, h4, h5, h6 to "Helvetica", "Verdana", sans-serif.
*/
h1,
h2,
h3,
h4,
h5,
h6 {
  font-family: "Helvetica", "Verdana", sans-serif;
  margin: 0.4rem;
}

h1 {
  margin: 1rem;
  font-size: 1.5rem;
}

h2 {
  font-size: 1.2rem;
  margin-bottom: 1rem;
}

/*
    background-color -> Seting the background color of the form to #fffdfb66.
*/
form {
  background-color: #fffdfb66;
}

.category li {
  margin-bottom: 0.3rem;
}

p,
#team > div > article {
  text-align: center;
}

/*
    list-style-type: none -> Removing the default list style.
*/
li {
  list-style-type: none;
}

/*
    text-decoration: none -> Removing the default text decoration.
*/
a {
  text-decoration: none;
}

/*  When hovering over an anchor tag, the following styles will be applied.

    text-decoration: underline -> Adding an underline to the text.
    color: blue -> Setting the color of the text to blue.
*/
a:hover {
  text-decoration: underline;
}

/*  When an anchor tag is visited/active/link, the following styles will be applied.

*/
a:visited {
  color: rgb(128, 0, 70);
}

/* Reduce opacity  */
a:active,
.btn:hover {
  opacity: 0.7;
}

a:link {
  color: #8b4513;
}

/*  spin -> Creating a custom animation called sway. 
     transform: rotate(x); -> Rotating the element by x degrees.
*/
@keyframes sway {
  0% {
    transform: rotate(-20deg);
  }

  25% {
    transform: rotate(90deg);
  }

  75% {
    transform: rotate(-40deg);
  }

  100% {
    transform: rotate(10deg);
  }
}

/*  Selecting the images with hovering state,
    inside the company-social-media class ancestor.
    
    animation: sway 0.4s linear; -> Applying the sway animation to the image.
    opacity: 0.8; -> Setting the opacity of the image to 0.8, to make the color lighter.

*/
.company-social-media img:hover {
  animation: sway 0.4s linear;
  opacity: 0.8;
}

/* Our default style for buttons.*/
button {
  background-color: #f5f5f5;
  border: 1px solid black;
  border-radius: 10px;
  height: 35px;
  width: 117px;
  margin: 5px;
  cursor: pointer;
}

/* Coloring green the button used for submitting. */
.btn-submit {
  background-color: rgb(98, 174, 91);
  color: white;
}

/* Coloring red the button used for resetting. */
.btn-reset {
  background-color: rgb(160, 52, 52);
  color: white;
}

/* Highlighting with red color the price trend. */
#price-trend {
  color: red;
  font-weight: normal;
}

table {
  background-color: #f1d6b5;
  border-collapse: collapse;
  width: 350px;
}

/* Align text to the left */
tr > * {
  text-align: left;
  border: 1px solid black;
}

/* Make characteristics stand out with bold text */
.listing-characteristics {
  font-weight: bold;
}

/* Make the caption stand out */
table > caption {
  font-weight: bold;
  font-size: 1.1rem;
}

/* Add padding to the content of the table rows to make them more readable */
tr > * {
  padding: 5px;
}

/* Give the table rows alternate color, utilizing the previous table color and this rule */
tr:nth-child(odd) {
  background-color: #fbe8d2;
}

/*  Implement card like listings, with border, rounded edges, background color */
.listing {
  font-size: 0.9rem;
  background-color: #fcfbfb;
  width: 20rem;
  border: 1px solid black;
  border-radius: 15px;
  margin-bottom: 1rem;
  padding: 0.5rem;
  display: flex;
  flex-direction: column;
  justify-content: space-between;
  align-items: center;
}

/* Letting the responsive listing images get their full size if needed, and assign a small margin */
.listing img {
  max-width: 100%;
  max-height: 100%;
  margin-bottom: 1rem;
}

/* Simple hover effect to the .card class */
a.card:hover {
  text-decoration: none;
  color: black;
  box-sizing: border-box;
}

a.card:visited,
a.card:link {
  color: black;
}

/* Set max width to the images inside each category card */
.category img {
  max-width: 100%;
}

/* Create simple cards to display diffrent categories. Add rounded edges, padding and arrange the content in a centered column */
.category {
  background-color: whitesmoke;
  border: 1px solid grey;
  border-radius: 10px;
  margin-bottom: 1rem;
  text-align: center;
  display: flex;
  flex-direction: column;
  padding: 1rem;
}

ul {
  padding: 0px;
}

/* Make the person images of our team a circle */
#team > div > article > figure > img {
  height: 5rem;
  width: 5rem;
  border-radius: 50%;
  margin: 1rem;
}

/* Make the heading get the full width available. */
header {
  padding: 0.2rem 0;
  background-color: #ffdeb7;
  width: 100%;
}

/* Hover effect for the anchor tags inside the header */
header a:hover {
  color: darkblue;
}

/* Make the footer get the full width, make the color white for better readability, add padding */
footer {
  width: 100%;
  background-color: #333;
  color: #fff;
  padding: 10px 0px;
  text-align: center;
  font-size: 0.8rem;
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  margin-top: 2rem;
}

.company-logo {
  height: 70px;
  border-radius: 50%;
}

/* Exercise 3 - Grid, Flexbox */

/* Create a grid of categories / listings, seperate into 2 row, using the first for h1, and the second for the categories / listings */
.categories,
.listings {
  display: grid;
  grid-template-rows: auto 1fr;
  grid-gap: 1rem;
  place-items: center;
}

/* h1 inside the grid expands through every column of its row */
.categories > h1,
.listings > h1 {
  grid-column: 1 / -1;
  text-align: center;
}

/* Simple hover effect with a shadow at the cards of the categories */
.category:hover,
.listing:hover {
  box-shadow: 0px 0px 10px 0px rgba(0, 0, 0, 0.75);
}

.apartment > img {
  max-width: 100%;
  max-height: 100%;
}

/* Create a grid of apartments, of 1, 2, or 3 columns depending on the screen size later. */
.apartment {
  display: grid;
  gap: 1rem;
  grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
  padding: 1rem;
  text-align: center;
  justify-items: center;
}

/* Append some margin for better readability */
.apartment > figcaption {
  margin-top: 1rem;
}

/* Center the description of the apartment */
.description {
  display: flex;
  justify-content: center;
  align-items: center;
}

/* Spread the elements inside the navigation bar */
nav {
  display: flex;
  justify-content: space-around;
  align-items: center;
  font-size: 0.75rem;
  max-width: 100%;
}

/* Assign a height for the images of the navigation bar */
nav > img {
  height: 2rem;
  border-radius: 50%;
}

/* Space out the elements inside the ul for better readability */
nav > ul {
  display: flex;
  gap: 0.7rem;
}

/* Align paragraphs left */
.description > p {
  text-align: left;
  margin: 2rem;
}

/* Center the social media images */
.company-social-media > ul {
  display: flex;
  justify-content: center;
  align-items: center;
  gap: 0.5rem;
}

/* Set same height for the social media images */
.company-social-media > ul > li > a > img {
  height: 3rem;
}

/* Center the content of the element with id team */
#team {
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
}

/* Remove excess margin */
#team > h2 {
  margin-bottom: 0rem;
}

/* Create card like elements to display details about members of the team, align the details to the center, add padding and background */
#team > div > article {
  background-color: rgb(214, 235, 235);
  display: flex;
  flex-direction: column;
  align-items: center;
  border: 1px solid black;
  box-shadow: 0px 0px 5px 0px rgba(0, 0, 0, 0.55);
  width: 100%;
  justify-content: center;
  margin: 0.5rem 0rem;
}

/* Remove excess margin*/
#team > div > article > figure {
  margin: 0rem;
}

/* Center the content of the main class and add padding to the sides for better readability */
.main {
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  padding: 0rem 2rem;
}

/* Add some padding to the sides */
.about {
  padding: 0rem 2rem;
}

/* Give background to the form, center its content, use rounded edges, add padding and margin for better readability */
form {
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  gap: 1rem;
  background-color: rgb(232, 226, 209);
  width: 100%;
  border: 1px solid #333;
  border-radius: 10px;
  padding-bottom: 2rem;
  margin-bottom: 1rem;
}

/* Align vertically the content and center it. */
fieldset {
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  gap: 1rem;
  border: none;
  width: 100%;
  border-radius: 10px;
  margin: 0;
  padding: 0;
}

/* Used to align the inputs left, and stack the labels on top of them */
fieldset > div {
  display: flex;
  flex-direction: column;
  align-items: flex-start;
  position: relative;
  padding-top: 1.5rem;
  width: 90%;
}

/* Create rounded edges on the inputs, add some padding to the start of the input area */
fieldset > div > input {
  border-radius: 10px;
  height: 1.5rem;
  width: 90%;
  max-width: 95%;
  padding-left: 0.5rem;
}

/* Give some margin to the legend of every fieldset for seperation of the other elements adjecent to it */
fieldset > legend {
  font-family: MyLightFont;
  margin-top: 0.5rem;
  margin-bottom: 1rem;
  margin-left: auto;
  margin-right: auto;
}

fieldset .required {
  color: brown;
}

/* Adjust the size of this h1 */
#intro > h1 {
  font-size: 2em;
}

/* Organising the listing details definition list as a grid */
.listing-details {
  display: grid;
  grid-template-columns: auto auto;
  grid-template-rows: repeat(3, 1fr);
}

/* Organising columns and alignment for the dd and dt childs of listing details  */
dt {
  grid-column: 1 / 2;
  text-align: center;
}

dd {
  grid-column: 2 / 3;
  text-align: center;
}

/* adding a small margin between the listing details and the table that follows */
.detailed-listing > .listing-details {
  margin-bottom: 2rem;
}

/* Space the elements out */
details > div > div {
  display: flex;
  justify-content: space-between;
  width: 200px;
  font-size: 0.9rem;
  margin-bottom: 0.3rem;
}

/* letting the responsive images get their max width & height */
.category img {
  max-width: 100%;
  max-height: 100%;
}

/* Exercise 4 - Media Queries */
/* 480px - 768px */

/* Tablet width starts here */
@media (min-width: 480px) {
  /* Horizontally align buttons inside this div */
  div.buttons {
    flex-direction: row;
    transform: scale(1);
  }

  /* Make checkboxes and radio buttons bigger */
  .questionnaire input[type="checkbox"],
  .questionnaire input[type="radio"] {
    transform: scale(1.2);
  }

  /* Make the grid of categories / listings 2 columns wide */
  .categories,
  .listings {
    grid-template-columns: repeat(2, minmax(auto, 1fr));
    padding: 0 1rem;
  }

  /* Give every category the same size */
  .category {
    height: 470px;
  }

  /* Give every listing the same heigh, add padding */
  .listing {
    height: 550px;
    padding-bottom: 1rem;
  }

  /* Make font size bigger than smartphone */
  nav {
    font-size: 1rem;
  }

  /* Scale up the images of the navigation bar, becaus ethey where smaller on the smartphone */
  nav > img {
    height: 2.2rem;
  }

  /* Make gap bigger than smartphones */
  nav > ul {
    gap: 2rem;
  }

  /* Make the form have a relative position */
  form {
    flex-direction: row;
    width: 80%;
    position: relative;
    padding: 1rem;
    margin-bottom: 3rem;
  }

  form#contact {
    flex-direction: column;
  }

  /* Use the relative position of the form for */
  form > div {
    position: absolute;
    bottom: -60px;
  }

  /* Make images bigger than smartphone */
  .company-social-media > ul > li > a > img {
    height: 3rem;
  }

  /* Adjust footer's content font size */
  footer {
    font-size: 0.9rem;
  }

  img {
    max-height: 236px;
  }

  /* Making the pictures of the apartment a 2x2 grid on tablets and pc screens */
  .apartment {
    display: grid;
    grid-template-columns: auto auto;
    grid-template-rows: auto auto;
    padding: 1rem 1rem 2rem 1rem;
    gap: 1rem;
  }

  .questionnaire > details > div > div {
    font-size: 1rem;
  }

  summary {
    font-size: 1.2rem;
  }
}
/* Laptop width */
@media (min-width: 1000px) {
  /* Make checkboxes and radio buttons bigger */
  .questionnaire input[type="checkbox"],
  .questionnaire input[type="radio"] {
    transform: scale(1.3);
  }

  /* Use 3 columns for categories and listings */
  .categories,
  .listings {
    grid-template-columns: repeat(3, minmax(300px, 1fr));
  }

  .team-members {
    display: flex;
    gap: 2rem;
  }

  /* Set a max width to the forms for better UX */
  form {
    max-width: 1000px;
    font-size: 0.9rem;
  }

  /* Use a grid of 2 columns for the inputs inside these elements */
  .registration .personal-info,
  .registration .user-address {
    display: grid;
    grid-template-columns: repeat(2, minmax(300px, 1fr));
  }

  /* Adjust the size of the legends for bigger screens */
  legend {
    font-size: 1.2rem;
  }

  /* Assign to the legend the full row length by using all the columns */
  .registration .personal-info legend,
  .registration .user-address legend {
    grid-column: 1 / -1;
    text-align: center;
  }

  /* Add custom width to push the content to the center of the view */
  .registration .user-authentication,
  .registration .contact-preferences {
    width: 80%;
  }

  /* Slightly adjusting the gap on pc screens */
  .apartment {
    gap: 2.5rem;
  }

  /* Adding a hover effect to the apartment pictures */
  .apartment > img:hover {
    transform: scale(1.1);
  }
}

/* Exercise 5 - Form Validation */

/* Mark invalid input and textarea with red border */
input:invalid,
textarea:invalid {
  border: 2px solid red;
}

/* Mark valid input and textarea with green border */
input:valid,
textarea:valid {
  border: 1px solid green;
}

/* Parent of the pages, center each page inside */
.pages {
  display: flex;
  justify-content: center;
  align-items: center;
  gap: 1rem;
  margin: 1rem 0;
}

/* Style the pages with padding and rounded edges */
.pages > a {
  padding: 0.5rem;
  border: 1px solid black;
  border-radius: 10px;
  text-decoration: none;
  color: black;
}

/* Hover effect for pages except the selected */
.pages > a:hover:not(.selected) {
  opacity: 0.5;
  cursor: pointer;
}

/* Make the selected page light blue color to stand out */
.pages > a.selected {
  background-color: lightblue;
  color: black;
}

/* Class used to hide forms */
.hidden {
  display: none;
}

/* Implementation of 2 column grid for better UX */
#contact-methods {
  display: grid;
  grid-template-columns: repeat(2, minmax(120px, 1fr));
}

/* Align the content of the contact methods to the center */
.contact-preferences div {
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
}

/* Add some padding for better readability */
#contact > fieldset > div {
  padding-top: 0.5rem;
}

/* Align the content vertically, make the elements start from the left. */
.questionnaire {
  display: flex;
  flex-direction: column;
  align-items: flex-start;
}

/* Add minor padding in a way where the content doesnt collide with the edges of the form */
#form-questionnaire {
  padding: 0.5rem;
}

/* Add minor margin for better readability */
details > div {
  margin: 0.5rem;
  width: 100%;
}

/* Align the content of the details to the left */
summary {
  text-align: left;
}

/* Use rounded edges for textarea */
textarea {
  width: 90%;
  border-radius: 10px;
}

/* Append the full width to the details element */
details {
  width: 100%;
}

/* Make the parent of textarea have some spacing from the top, append enough width for better UX */
#textarea-container {
  padding-top: 0.5rem;
  width: 85%;
}

/* Mark pages of valid forms with green */
.pages > .valid {
  background-color: green;
  color: white;
}

/* Mark pages of invalid forms with red */
.pages > .invalid {
  background-color: red;
  color: white;
}

/* Use red color for invalid input custom errors */
.error {
  padding-top: 10px;
  color: red;
}

/* Vertically align the buttons inside div.buttons */
.buttons {
  display: flex;
  flex-direction: column;
  transform: scale(0.8);
}
